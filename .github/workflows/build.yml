name: Build Financial Review Dashboard

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            args: '--target universal-apple-darwin'
          - platform: 'ubuntu-20.04'
            args: ''
          - platform: 'windows-latest'
            args: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libayatana-appindicator3-dev librsvg2-dev

      - name: Create icons directory and files
        run: |
          mkdir -p src-tauri/icons
        shell: bash

      - name: Create minimal ICO file (Windows)
        if: matrix.platform == 'windows-latest'
        run: |
          echo "AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAABILAAASCwAAAAAAAAAAAAD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==" > temp_icon.txt
          certutil -decode temp_icon.txt src-tauri/icons/icon.ico
        shell: cmd

      - name: Create minimal PNG files
        run: |
          echo "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABkSURBVFhH7ZMxDgAgCATh/z9am5gYG1s7O1s7O1s7O1s7O1s7O1s7O1s7O1s7O1s7O1s7O1s7O1s7O1s7O1s7O1s7O1s7O1s7O1s7O1s7O1s7O1s7O1s7O1s7O1s7O1s7O1s7O1s7OwMxUgHq9N8rCgAAAABJRU5ErkJggg==" > temp_32.txt
          echo "iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABkSURBVHhe7cMBADEAwDAKoP2X2jRtKwlgAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKRlAGlgAJBQAOhgABBAQNgAAAAAElFTkSuQmCC" > temp_128.txt
          if [[ "${{ matrix.platform }}" == "windows-latest" ]]; then
            certutil -decode temp_32.txt src-tauri/icons/32x32.png
            certutil -decode temp_128.txt src-tauri/icons/128x128.png
            copy src-tauri/icons/128x128.png src-tauri/icons/128x128@2x.png
          else
            base64 -d temp_32.txt > src-tauri/icons/32x32.png
            base64 -d temp_128.txt > src-tauri/icons/128x128.png
            cp src-tauri/icons/128x128.png src-tauri/icons/128x128@2x.png
          fi
        shell: bash

      - name: Create ICNS file (macOS)
        if: matrix.platform == 'macos-latest'
        run: |
          mkdir -p src-tauri/icons/icon.iconset
          cp src-tauri/icons/32x32.png src-tauri/icons/icon.iconset/icon_32x32.png
          cp src-tauri/icons/128x128.png src-tauri/icons/icon.iconset/icon_128x128.png
          iconutil -c icns src-tauri/icons/icon.iconset -o src-tauri/icons/icon.icns 2>/dev/null || echo "dummy icns content" > src-tauri/icons/icon.icns
        shell: bash

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Sync node version and setup cache
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - name: Install frontend dependencies
        run: npm install

      - name: Build the app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: ${{ github.ref_name }}
          releaseName: 'Financial Review Dashboard v__VERSION__'
          releaseBody: 'See the assets to download and install this version.'
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: financial-dashboard-${{ matrix.platform }}
          path: |
            src-tauri/target/release/bundle/
            src-tauri/target/universal-apple-darwin/release/bundle/
          retention-days: 30
